---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "zenrock.fullname" . }}
data:
  {{- if .Values.sidecar.enabled }}
  eigen_operator_config.yaml: |
    register_operator_on_startup: {{ .Values.sidecar.eigen_operator.register_on_startup }}
    # this sets the logger level (true = info, false = debug)
    production: {{ .Values.sidecar.eigen_operator.production }}
    operator_address: {{ .Values.sidecar.eigen_operator.operator_address }}
    operator_validator_address: {{ .Values.sidecar.eigen_operator.operator_validator_address }}

    # EigenLayer Slasher contract address
    # This is the address of the contracts which are deployed in the anvil saved state
    # The saved eigenlayer state is located in tests/anvil/credible_squaring_avs_deployment_output.json
    avs_registry_coordinator_address: {{ .Values.sidecar.eigen_operator.avs_registry_coordinator_address }}
    operator_state_retriever_address: {{ .Values.sidecar.eigen_operator.operator_state_retriever_address }}

    # ETH RPC URL
    eth_rpc_url: {{ .Values.sidecar.eigen_operator.eth_rpc_url }}
    eth_ws_url: {{ .Values.sidecar.eigen_operator.eth_ws_url }}

    # ECDSA key
    ecdsa_private_key_store_path: /eigen/keys/ecdsa.key.json

    # We are using bn254 curve for bls keys
    bls_private_key_store_path: /eigen/keys/bls.key.json

    # address which the aggregator listens on for operator signed messages
    aggregator_server_ip_port_address: {{ .Values.sidecar.eigen_operator.aggregator_address }}

    # avs node spec compliance https://eigen.nethermind.io/docs/spec/intro
    eigen_metrics_ip_port_address: {{ .Values.sidecar.eigen_operator.metrics_address }}
    enable_metrics: {{ .Values.sidecar.eigen_operator.enable_metrics }}
    node_api_ip_port_address: {{ .Values.sidecar.eigen_operator.node_api_address }}
    enable_node_api: {{ .Values.sidecar.eigen_operator.enable_node_api }}

    # address of token to deposit tokens into when registering on startup
    token_strategy_addr: {{ .Values.sidecar.eigen_operator.token_strategy_addr }}

  {{- end }}
  {{- if not .Values.sidecar.configFromSecret }}
  sidecar_config.yaml: |
    {{- .Values.sidecar.config | nindent 4 }}
  {{- end }}
  priv_validator_state.json: |
    {
      "height": "0",
      "round": 0,
      "step": 0
    }

  app.toml: |
    # This is a TOML config file.
    # For more information, see https://github.com/toml-lang/toml
    ###############################################################################
    ###                           Base Configuration                            ###
    ###############################################################################
    # The minimum gas prices a validator is willing to accept for processing a
    # transaction. A transaction's fees must meet the minimum of any denomination
    # specified in this config (e.g. 0.25token1;0.0001token2).
    minimum-gas-prices = "{{ .Values.zenrock.config.minimum_gas_prices }}"
    # default: the last 362880 states are kept, pruning at 10 block intervals
    # nothing: all historic states will be saved, nothing will be deleted (i.e. archiving node)
    # everything: 2 latest states will be kept; pruning at 10 block intervals.
    # custom: allow pruning options to be manually specified through 'pruning-keep-recent', and 'pruning-interval'
    pruning = "{{ .Values.zenrock.config.pruning }}"
    # These are applied if and only if the pruning strategy is custom.
    pruning-keep-recent = "{{ .Values.zenrock.config.pruning_keep_recent }}"
    pruning-interval = "{{ .Values.zenrock.config.pruning_interval }}"
    # HaltHeight contains a non-zero block height at which a node will gracefully
    # halt and shutdown that can be used to assist upgrades and testing.
    #
    # Note: Commitment of state will be attempted on the corresponding block.
    halt-height = 0
    # HaltTime contains a non-zero minimum block time (in Unix seconds) at which
    # a node will gracefully halt and shutdown that can be used to assist upgrades
    # and testing.
    #
    # Note: Commitment of state will be attempted on the corresponding block.
    halt-time = 0
    # MinRetainBlocks defines the minimum block height offset from the current
    # block being committed, such that all blocks past this offset are pruned
    # from Tendermint. It is used as part of the process of determining the
    # ResponseCommit.RetainHeight value during ABCI Commit. A value of 0 indicates
    # that no blocks should be pruned.
    #
    # This configuration value is only responsible for pruning Tendermint blocks.
    # It has no bearing on application state pruning which is determined by the
    # "pruning-*" configurations.
    #
    # Note: Tendermint block pruning is dependant on this parameter in conunction
    # with the unbonding (safety threshold) period, state pruning and state sync
    # snapshot parameters to determine the correct minimum value of
    # ResponseCommit.RetainHeight.
    min-retain-blocks = 0
    # InterBlockCache enables inter-block caching.
    inter-block-cache = true
    # IndexEvents defines the set of events in the form {eventType}.{attributeKey},
    # which informs Tendermint what to index. If empty, all events will be indexed.
    #
    # Example:
    # ["message.sender", "message.recipient"]
    index-events = []
    # IavlCacheSize set the size of the iavl tree cache (in number of nodes).
    iavl-cache-size = 781250
    # IAVLDisableFastNode enables or disables the fast node feature of IAVL.
    # Default is false.
    iavl-disable-fastnode = false
    # IAVLLazyLoading enable/disable the lazy loading of iavl store.
    # Default is false.
    iavl-lazy-loading = false
    # AppDBBackend defines the database backend type to use for the application and snapshots DBs.
    # An empty string indicates that a fallback will be used.
    # First fallback is the deprecated compile-time types.DBBackend value.
    # Second fallback (if the types.DBBackend also isn't set), is the db-backend value set in Tendermint's config.toml.
    app-db-backend = ""
    ###############################################################################
    ###                         Telemetry Configuration                         ###
    ###############################################################################
    [telemetry]
    # Prefixed with keys to separate services.
    service-name = ""
    # Enabled enables the application telemetry functionality. When enabled,
    # an in-memory sink is also enabled by default. Operators may also enabled
    # other sinks such as Prometheus.
    enabled = false
    # Enable prefixing gauge values with hostname.
    enable-hostname = false
    # Enable adding hostname to labels.
    enable-hostname-label = false
    # Enable adding service to labels.
    enable-service-label = false
    # PrometheusRetentionTime, when positive, enables a Prometheus metrics sink.
    prometheus-retention-time = 1000000000000
    # GlobalLabels defines a global set of name/value label tuples applied to all
    # metrics emitted using the wrapper functions defined in telemetry package.
    #
    # Example:
    # [["chain_id", "cosmoshub-1"]]
    global-labels = [
    ]
    ###############################################################################
    ###                           API Configuration                             ###
    ###############################################################################
    [api]
    # Enable defines if the API server should be enabled.
    enable = true
    # Swagger defines if swagger documentation should automatically be registered.
    swagger = false
    # Address defines the API server to listen on.
    address = "tcp://0.0.0.0:1717"
    # MaxOpenConnections defines the number of maximum open connections.
    max-open-connections = 1000
    # RPCReadTimeout defines the Tendermint RPC read timeout (in seconds).
    rpc-read-timeout = 10
    # RPCWriteTimeout defines the Tendermint RPC write timeout (in seconds).
    rpc-write-timeout = 0
    # RPCMaxBodyBytes defines the Tendermint maximum request body (in bytes).
    rpc-max-body-bytes = 1000000
    # EnableUnsafeCORS defines if CORS should be enabled (unsafe - use it at your own risk).
    enabled-unsafe-cors = true
    ###############################################################################
    ###                           Rosetta Configuration                         ###
    ###############################################################################
    [rosetta]
    # Enable defines if the Rosetta API server should be enabled.
    enable = false
    # Address defines the Rosetta API server to listen on.
    address = ":8080"
    # Network defines the name of the blockchain that will be returned by Rosetta.
    blockchain = "app"
    # Network defines the name of the network that will be returned by Rosetta.
    network = "network"
    # Retries defines the number of retries when connecting to the node before failing.
    retries = 3
    # Offline defines if Rosetta server should run in offline mode.
    offline = false
    # EnableDefaultSuggestedFee defines if the server should suggest fee by default.
    # If 'construction/medata' is called without gas limit and gas price,
    # suggested fee based on gas-to-suggest and denom-to-suggest will be given.
    enable-fee-suggestion = false
    # GasToSuggest defines gas limit when calculating the fee
    gas-to-suggest = 200000
    # DenomToSuggest defines the defult denom for fee suggestion.
    # Price must be in minimum-gas-prices.
    denom-to-suggest = "uatom"
    ###############################################################################
    ###                           gRPC Configuration                            ###
    ###############################################################################
    [grpc]
    # Enable defines if the gRPC server should be enabled.
    enable = true
    # Address defines the gRPC server address to bind to.
    address = "0.0.0.0:9790"
    # MaxRecvMsgSize defines the max message size in bytes the server can receive.
    # The default value is 10MB.
    max-recv-msg-size = "10485760"
    # MaxSendMsgSize defines the max message size in bytes the server can send.
    # The default value is math.MaxInt32.
    max-send-msg-size = "2147483647"
    ###############################################################################
    ###                        gRPC Web Configuration                           ###
    ###############################################################################
    [grpc-web]
    # GRPCWebEnable defines if the gRPC-web should be enabled.
    # NOTE: gRPC must also be enabled, otherwise, this configuration is a no-op.
    enable = true
    # Address defines the gRPC-web server address to bind to.
    address = "0.0.0.0:9791"
    # EnableUnsafeCORS defines if CORS should be enabled (unsafe - use it at your own risk).
    enable-unsafe-cors = false
    ###############################################################################
    ###                        State Sync Configuration                         ###
    ###############################################################################
    # State sync snapshots allow other nodes to rapidly join the network without replaying historical
    # blocks, instead downloading and applying a snapshot of the application state at a given height.
    [state-sync]
    # snapshot-interval specifies the block interval at which local state sync snapshots are
    # taken (0 to disable).
    snapshot-interval = {{ .Values.zenrock.config.snapshot_interval }}
    # snapshot-keep-recent specifies the number of recent snapshots to keep and serve (0 to keep all).
    snapshot-keep-recent = {{ .Values.zenrock.config.snapshot_keep_recent }}
    ###############################################################################
    ###                         Store / State Streaming                         ###
    ###############################################################################
    [store]
    streamers = []
    [streamers]
    [streamers.file]
    keys = ["*", ]
    write_dir = ""
    prefix = ""
    # output-metadata specifies if output the metadata file which includes the abci request/responses
    # during processing the block.
    output-metadata = "true"
    # stop-node-on-error specifies if propagate the file streamer errors to consensus state machine.
    stop-node-on-error = "true"
    # fsync specifies if call fsync after writing the files.
    fsync = "false"
    ###############################################################################
    ###                         Mempool                                         ###
    ###############################################################################
    [mempool]
    # Setting max-txs to 0 will allow for a unbounded amount of transactions in the mempool.
    # Setting max_txs to negative 1 (-1) will disable transactions from being inserted into the mempool.
    # Setting max_txs to a positive number (> 0) will limit the number of transactions in the mempool, by the specified amount.
    #
    # Note, this configuration only applies to SDK built-in app-side mempool
    # implementations.
    max-txs = "5000"
    ###############################################################################
    ###                             EVM Configuration                           ###
    ###############################################################################
    [evm]
    # Tracer defines the 'vm.Tracer' type that the EVM will use when the node is run in
    # debug mode. To enable tracing use the '--evm.tracer' flag when starting your node.
    # Valid types are: json|struct|access_list|markdown
    tracer = ""
    # MaxTxGasWanted defines the gas wanted for each eth tx returned in ante handler in check tx mode.
    max-tx-gas-wanted = 0
    ###############################################################################
    ###                           JSON RPC Configuration                        ###
    ###############################################################################
    [json-rpc]
    # Enable defines if the gRPC server should be enabled.
    enable = true
    # Address defines the EVM RPC HTTP server address to bind to.
    address = "127.0.0.1:8545"
    # Address defines the EVM WebSocket server address to bind to.
    ws-address = "127.0.0.1:8546"
    # API defines a list of JSON-RPC namespaces that should be enabled
    # Example: "eth,txpool,personal,net,debug,web3"
    api = "eth,net,web3"
    # GasCap sets a cap on gas that can be used in eth_call/estimateGas (0=infinite). Default: 25,000,000.
    gas-cap = 25000000
    # EVMTimeout is the global timeout for eth_call. Default: 5s.
    evm-timeout = "5s"
    # TxFeeCap is the global tx-fee cap for send transaction. Default: 1eth.
    txfee-cap = 1
    # FilterCap sets the global cap for total number of filters that can be created
    filter-cap = 200
    # FeeHistoryCap sets the global cap for total number of blocks that can be fetched
    feehistory-cap = 100
    # LogsCap defines the max number of results can be returned from single 'eth_getLogs' query.
    logs-cap = 10000
    # BlockRangeCap defines the max block range allowed for 'eth_getLogs' query.
    block-range-cap = 10000
    # HTTPTimeout is the read/write timeout of http json-rpc server.
    http-timeout = "30s"
    # HTTPIdleTimeout is the idle timeout of http json-rpc server.
    http-idle-timeout = "2m0s"
    # AllowUnprotectedTxs restricts unprotected (non EIP155 signed) transactions to be submitted via
    # the node's RPC when the global parameter is disabled.
    allow-unprotected-txs = false
    # MaxOpenConnections sets the maximum number of simultaneous connections
    # for the server listener.
    max-open-connections = 0
    # EnableIndexer enables the custom transaction indexer for the EVM (ethereum transactions).
    enable-indexer = false
    # MetricsAddress defines the EVM Metrics server address to bind to. Pass --metrics in CLI to enable
    # Prometheus metrics path: /debug/metrics/prometheus
    metrics-address = "127.0.0.1:6065"
    # Upgrade height for fix of revert gas refund logic when transaction reverted.
    fix-revert-gas-refund-height = 0
    # Maximum number of bytes returned from eth_call or similar invocations.
    return-data-limit = 100000
    ###############################################################################
    ###                             TLS Configuration                           ###
    ###############################################################################
    [tls]
    # Certificate path defines the cert.pem file path for the TLS configuration.
    certificate-path = ""
    # Key path defines the key.pem file path for the TLS configuration.
    key-path = ""

  client.toml: |
    # This is a TOML config file.
    # For more information, see https://github.com/toml-lang/toml
    ###############################################################################
    ###                           Client Configuration                            ###
    ###############################################################################
    # The network chain ID
    chain-id = "{{ .Values.zenrock.chain_id }}"
    # The keyring's backend, where the keys are stored (os|file|kwallet|pass|test|memory)
    keyring-backend = "os"
    # CLI output format (text|json)
    output = "text"
    # <host>:<port> to Tendermint RPC interface for this chain
    node = "tcp://localhost:26657"
    # Transaction broadcasting mode (sync|async)
    broadcast-mode = "sync"
  config.toml: |
    # This is a TOML config file.
    # For more information, see https://github.com/toml-lang/toml
    # NOTE: Any path below can be absolute (e.g. "/var/myawesomeapp/data") or
    # relative to the home directory (e.g. "data"). The home directory is
    # "$HOME/.cometbft" by default, but could be changed via $CMTHOME env variable
    # or --home cmd flag.
    #######################################################################
    ###                   Main Base Config Options                      ###
    #######################################################################
    # TCP or UNIX socket address of the ABCI application,
    # or the name of an ABCI application compiled in with the CometBFT binary
    proxy_app = "tcp://127.0.0.1:26658"
    # A custom human readable name for this node
    moniker = "{{ .Values.zenrock.config.moniker }}"
    # If this node is many blocks behind the tip of the chain, BlockSync
    # allows them to catchup quickly by downloading blocks in parallel
    # and verifying their commits
    #
    # Deprecated: this key will be removed and BlockSync will be enabled
    # unconditionally in the next major release.
    block_sync = true
    # Database backend: goleveldb | cleveldb | boltdb | rocksdb | badgerdb
    # * goleveldb (github.com/syndtr/goleveldb - most popular implementation)
    #   - pure go
    #   - stable
    # * cleveldb (uses levigo wrapper)
    #   - fast
    #   - requires gcc
    #   - use cleveldb build tag (go build -tags cleveldb)
    # * boltdb (uses etcd's fork of bolt - github.com/etcd-io/bbolt)
    #   - EXPERIMENTAL
    #   - may be faster is some use-cases (random reads - indexer)
    #   - use boltdb build tag (go build -tags boltdb)
    # * rocksdb (uses github.com/tecbot/gorocksdb)
    #   - EXPERIMENTAL
    #   - requires gcc
    #   - use rocksdb build tag (go build -tags rocksdb)
    # * badgerdb (uses github.com/dgraph-io/badger)
    #   - EXPERIMENTAL
    #   - use badgerdb build tag (go build -tags badgerdb)
    db_backend = "goleveldb"
    # Database directory
    db_dir = "data"
    # Output level for logging, including package level options
    log_level = "{{ .Values.zenrock.config.log_level }}"
    # Output format: 'plain' (colored text) or 'json'
    log_format = "{{ .Values.zenrock.config.log_format }}"
    ##### additional base config options #####
    # Path to the JSON file containing the initial validator set and other meta data
    genesis_file = "config/genesis.json"
    # Path to the JSON file containing the private key to use as a validator in the consensus protocol
    priv_validator_key_file = "config/priv_validator_key.json"
    # Path to the JSON file containing the last sign state of a validator
    priv_validator_state_file = "data/priv_validator_state.json"

    # TCP or UNIX socket address for CometBFT to listen on for
    # connections from an external PrivValidator process
    priv_validator_laddr = ""
    
    # Path to the JSON file containing the private key to use for node authentication in the p2p protocol
    node_key_file = "config/node_key.json"
    # Mechanism to connect to the ABCI application: socket | grpc
    abci = "socket"
    # If true, query the ABCI app on connecting to a new peer
    # so the app can decide if we should keep the connection or not
    filter_peers = false
    #######################################################################
    ###                 Advanced Configuration Options                  ###
    #######################################################################
    #######################################################
    ###       RPC Server Configuration Options          ###
    #######################################################
    [rpc]
    # TCP or UNIX socket address for the RPC server to listen on
    laddr = "tcp://0.0.0.0:26657"
    # A list of origins a cross-domain request can be executed from
    # Default value '[]' disables cors support
    # Use '["*"]' to allow any origin
    cors_allowed_origins = ["*"]
    # A list of methods the client is allowed to use with cross-domain requests
    cors_allowed_methods = ["HEAD", "GET", "POST", ]
    # A list of non simple headers the client is allowed to use with cross-domain requests
    cors_allowed_headers = ["Origin", "Accept", "Content-Type", "X-Requested-With", "X-Server-Time", ]
    # TCP or UNIX socket address for the gRPC server to listen on
    # NOTE: This server only supports /broadcast_tx_commit
    grpc_laddr = ""
    # Maximum number of simultaneous connections.
    # Does not include RPC (HTTP&WebSocket) connections. See max_open_connections
    # If you want to accept a larger number than the default, make sure
    # you increase your OS limits.
    # 0 - unlimited.
    # Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
    # 1024 - 40 - 10 - 50 = 924 = ~900
    grpc_max_open_connections = 900
    # Activate unsafe RPC commands like /dial_seeds and /unsafe_flush_mempool
    unsafe = false
    # Maximum number of simultaneous connections (including WebSocket).
    # Does not include gRPC connections. See grpc_max_open_connections
    # If you want to accept a larger number than the default, make sure
    # you increase your OS limits.
    # 0 - unlimited.
    # Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
    # 1024 - 40 - 10 - 50 = 924 = ~900
    max_open_connections = 900
    # Maximum number of unique clientIDs that can /subscribe
    # If you're using /broadcast_tx_commit, set to the estimated maximum number
    # of broadcast_tx_commit calls per block.
    max_subscription_clients = 100
    # Maximum number of unique queries a given client can /subscribe to
    # If you're using GRPC (or Local RPC client) and /broadcast_tx_commit, set to
    # the estimated # maximum number of broadcast_tx_commit calls per block.
    max_subscriptions_per_client = 5
    # Experimental parameter to specify the maximum number of events a node will
    # buffer, per subscription, before returning an error and closing the
    # subscription. Must be set to at least 100, but higher values will accommodate
    # higher event throughput rates (and will use more memory).
    experimental_subscription_buffer_size = 200
    # Experimental parameter to specify the maximum number of RPC responses that
    # can be buffered per WebSocket client. If clients cannot read from the
    # WebSocket endpoint fast enough, they will be disconnected, so increasing this
    # parameter may reduce the chances of them being disconnected (but will cause
    # the node to use more memory).
    #
    # Must be at least the same as "experimental_subscription_buffer_size",
    # otherwise connections could be dropped unnecessarily. This value should
    # ideally be somewhat higher than "experimental_subscription_buffer_size" to
    # accommodate non-subscription-related RPC responses.
    experimental_websocket_write_buffer_size = 200
    # If a WebSocket client cannot read fast enough, at present we may
    # silently drop events instead of generating an error or disconnecting the
    # client.
    #
    # Enabling this experimental parameter will cause the WebSocket connection to
    # be closed instead if it cannot read fast enough, allowing for greater
    # predictability in subscription behavior.
    experimental_close_on_slow_client = false
    # How long to wait for a tx to be committed during /broadcast_tx_commit.
    # WARNING: Using a value larger than 10s will result in increasing the
    # global HTTP write timeout, which applies to all connections and endpoints.
    # See https://github.com/tendermint/tendermint/issues/3435
    timeout_broadcast_tx_commit = "10s"
    # Maximum size of request body, in bytes
    max_body_bytes = 1000000
    # Maximum size of request header, in bytes
    max_header_bytes = 1048576
    # The path to a file containing certificate that is used to create the HTTPS server.
    # Might be either absolute path or path related to CometBFT's config directory.
    # If the certificate is signed by a certificate authority,
    # the certFile should be the concatenation of the server's certificate, any intermediates,
    # and the CA's certificate.
    # NOTE: both tls_cert_file and tls_key_file must be present for CometBFT to create HTTPS server.
    # Otherwise, HTTP server is run.
    tls_cert_file = ""
    # The path to a file containing matching private key that is used to create the HTTPS server.
    # Might be either absolute path or path related to CometBFT's config directory.
    # NOTE: both tls-cert-file and tls-key-file must be present for CometBFT to create HTTPS server.
    # Otherwise, HTTP server is run.
    tls_key_file = ""
    # pprof listen address (https://golang.org/pkg/net/http/pprof)
    pprof_laddr = "localhost:6060"
    #######################################################
    ###           P2P Configuration Options             ###
    #######################################################
    [p2p]
    # Address to listen for incoming connections
    laddr = "tcp://0.0.0.0:26656"
    # Address to advertise to peers for them to dial
    # If empty, will use the same port as the laddr,
    # and will introspect on the listener or use UPnP
    # to figure out the address. ip and port are required
    # example: 159.89.10.97:26656
    external_address = "{{ .Values.zenrock.config.external_address }}"
    # Comma separated list of seed nodes to connect to
    seeds = ""
    # Comma separated list of nodes to keep persistent connections to
    persistent_peers = "{{ .Values.zenrock.config.persistent_peers }}"
    # UPNP port forwarding
    upnp = false
    # Path to address book
    addr_book_file = "config/addrbook.json"
    # Set true for strict address routability rules
    # Set false for private or local networks
    addr_book_strict = true
    # Maximum number of inbound peers
    max_num_inbound_peers = {{ .Values.zenrock.config.max_num_inbound_peers }}
    # Maximum number of outbound peers to connect to, excluding persistent peers
    max_num_outbound_peers = {{ .Values.zenrock.config.max_num_outbound_peers }}
    # List of node IDs, to which a connection will be (re)established ignoring any existing limits
    unconditional_peer_ids = "{{ .Values.zenrock.config.unconditional_peer_ids }}"
    # Maximum pause when redialing a persistent peer (if zero, exponential backoff is used)
    persistent_peers_max_dial_period = "0s"
    # Time to wait before flushing messages out on the connection
    flush_throttle_timeout = "100ms"
    # Maximum size of a message packet payload, in bytes
    max_packet_msg_payload_size = 1024
    # Rate at which packets can be sent, in bytes/second
    send_rate = {{ .Values.zenrock.config.p2p_send_rate }}
    # Rate at which packets can be received, in bytes/second
    recv_rate = {{ .Values.zenrock.config.p2p_recv_rate }}
    # Set true to enable the peer-exchange reactor
    pex = "{{ .Values.zenrock.config.pex }}"
    # Seed mode, in which node constantly crawls the network and looks for
    # peers. If another node asks it for addresses, it responds and disconnects.
    #
    # Does not work if the peer-exchange reactor is disabled.
    seed_mode = false
    # Comma separated list of peer IDs to keep private (will not be gossiped to other peers)
    private_peer_ids = "{{ .Values.zenrock.config.private_peers }}"
    # Toggle to disable guard against peers connecting from the same ip.
    allow_duplicate_ip = "{{ .Values.zenrock.config.allow_duplicate_ip }}"
    # Peer connection configuration.
    handshake_timeout = "20s"
    dial_timeout = "3s"
    #######################################################
    ###          Mempool Configuration Option          ###
    #######################################################
    [mempool]
    # Mempool version to use:
    #   1) "v0" - (default) FIFO mempool.
    #   2) "v1" - prioritized mempool (deprecated; will be removed in the next release).
    version = "v0"
    recheck = true
    broadcast = true
    wal_dir = ""
    # Maximum number of transactions in the mempool
    size = 5000
    # Limit the total size of all txs in the mempool.
    # This only accounts for raw transactions (e.g. given 1MB transactions and
    # max_txs_bytes=5MB, mempool will only accept 5 transactions).
    max_txs_bytes = 1073741824
    # Size of the cache (used to filter transactions we saw earlier) in transactions
    cache_size = 10000
    # Do not remove invalid transactions from the cache (default: false)
    # Set to true if it's not possible for any invalid transaction to become valid
    # again in the future.
    keep-invalid-txs-in-cache = false
    # Maximum size of a single transaction.
    # NOTE: the max size of a tx transmitted over the network is {max_tx_bytes}.
    max_tx_bytes = 1048576
    # Maximum size of a batch of transactions to send to a peer
    # Including space needed by encoding (one varint per transaction).
    # XXX: Unused due to https://github.com/tendermint/tendermint/issues/5796
    max_batch_bytes = 0
    # ttl-duration, if non-zero, defines the maximum amount of time a transaction
    # can exist for in the mempool.
    #
    # Note, if ttl-num-blocks is also defined, a transaction will be removed if it
    # has existed in the mempool at least ttl-num-blocks number of blocks or if it's
    # insertion time into the mempool is beyond ttl-duration.
    ttl-duration = "0s"
    # ttl-num-blocks, if non-zero, defines the maximum number of blocks a transaction
    # can exist for in the mempool.
    #
    # Note, if ttl-duration is also defined, a transaction will be removed if it
    # has existed in the mempool at least ttl-num-blocks number of blocks or if
    # it's insertion time into the mempool is beyond ttl-duration.
    ttl-num-blocks = 0
    #######################################################
    ###         State Sync Configuration Options        ###
    #######################################################
    [statesync]
    # State sync rapidly bootstraps a new node by discovering, fetching, and restoring a state machine
    # snapshot from peers instead of fetching and replaying historical blocks. Requires some peers in
    # the network to take and serve state machine snapshots. State sync is not attempted if the node
    # has any local state (LastBlockHeight > 0). The node will have a truncated block history,
    # starting from the height of the snapshot.
    enable = {{ .Values.zenrock.config.statesync_enabled }}
    # RPC servers (comma-separated) for light client verification of the synced state machine and
    # retrieval of state data for node bootstrapping. Also needs a trusted height and corresponding
    # header hash obtained from a trusted source, and a period during which validators can be trusted.
    #
    # For Cosmos SDK-based chains, trust_period should usually be about 2/3 of the unbonding time (~2
    # weeks) during which they can be financially punished (slashed) for misbehavior.
    rpc_servers = "{{ .Values.zenrock.config.statesync_rpc_servers }}"
    trust_height = {{ .Values.zenrock.config.statesync_trust_height }}
    trust_hash = "{{ .Values.zenrock.config.statesync_trust_hash }}"
    trust_period = "{{ .Values.zenrock.config.statesync_trust_period }}"
    # Time to spend discovering snapshots before initiating a restore.
    discovery_time = "15s"
    # Temporary directory for state sync snapshot chunks, defaults to the OS tempdir (typically /tmp).
    # Will create a new, randomly named directory within, and remove it when done.
    temp_dir = ""
    # The timeout duration before re-requesting a chunk, possibly from a different
    # peer (default: 1 minute).
    chunk_request_timeout = "10s"
    # The number of concurrent chunk fetchers to run (default: 1).
    chunk_fetchers = "4"
    #######################################################
    ###       Block Sync Configuration Options          ###
    #######################################################
    [blocksync]
    # Block Sync version to use:
    #
    # In v0.37, v1 and v2 of the block sync protocols were deprecated.
    # Please use v0 instead.
    #
    #   1) "v0" - the default block sync implementation
    version = "v0"
    #######################################################
    ###         Consensus Configuration Options         ###
    #######################################################
    [consensus]
    wal_file = "data/cs.wal/wal"
    # How long we wait for a proposal block before prevoting nil
    timeout_propose = "3s"
    # How much timeout_propose increases with each round
    timeout_propose_delta = "500ms"
    # How long we wait after receiving +2/3 prevotes for “anything” (ie. not a single block or nil)
    timeout_prevote = "1s"
    # How much the timeout_prevote increases with each round
    timeout_prevote_delta = "500ms"
    # How long we wait after receiving +2/3 precommits for “anything” (ie. not a single block or nil)
    timeout_precommit = "1s"
    # How much the timeout_precommit increases with each round
    timeout_precommit_delta = "500ms"
    # How long we wait after committing a block, before starting on the new
    # height (this gives us a chance to receive some more precommits, even
    # though we already have +2/3).
    timeout_commit = "{{ .Values.zenrock.config.timeout_commit }}"
    # How many blocks to look back to check existence of the node's consensus votes before joining consensus
    # When non-zero, the node will panic upon restart
    # if the same consensus key was used to sign {double_sign_check_height} last blocks.
    # So, validators should stop the state machine, wait for some blocks, and then restart the state machine to avoid panic.
    double_sign_check_height = 0
    # Make progress as soon as we have all the precommits (as if TimeoutCommit = 0)
    skip_timeout_commit = false
    # EmptyBlocks mode and possible interval between empty blocks
    create_empty_blocks = "{{ .Values.zenrock.config.create_empty_blocks }}"
    create_empty_blocks_interval = "{{ .Values.zenrock.config.create_empty_blocks_interval }}"
    # Reactor sleep duration parameters
    peer_gossip_sleep_duration = "100ms"
    peer_query_maj23_sleep_duration = "2s"
    #######################################################
    ###         Storage Configuration Options           ###
    #######################################################
    [storage]
    # Set to true to discard ABCI responses from the state store, which can save a
    # considerable amount of disk space. Set to false to ensure ABCI responses are
    # persisted. ABCI responses are required for /block_results RPC queries, and to
    # reindex events in the command-line tool.
    discard_abci_responses = false
    #######################################################
    ###   Transaction Indexer Configuration Options     ###
    #######################################################
    [tx_index]
    # What indexer to use for transactions
    #
    # The application will set which txs to index. In some cases a node operator will be able
    # to decide which txs to index based on configuration set in the application.
    #
    # Options:
    #   1) "null"
    #   2) "kv" (default) - the simplest possible indexer, backed by key-value storage (defaults to levelDB; see DBBackend).
    # 		- When "kv" is chosen "tx.height" and "tx.hash" will always be indexed.
    #   3) "psql" - the indexer services backed by PostgreSQL.
    # When "kv" or "psql" is chosen "tx.height" and "tx.hash" will always be indexed.
    indexer = "kv"
    # The PostgreSQL connection configuration, the connection format:
    #   postgresql://<user>:<password>@<host>:<port>/<db>?<opts>
    psql-conn = ""
    #######################################################
    ###       Instrumentation Configuration Options     ###
    #######################################################
    [instrumentation]
    # When true, Prometheus metrics are served under /metrics on
    # PrometheusListenAddr.
    # Check out the documentation for the list of available metrics.
    prometheus = true
    # Address to listen for Prometheus collector(s) connections
    prometheus_listen_addr = ":26660"
    # Maximum number of simultaneous connections.
    # If you want to accept a larger number than the default, make sure
    # you increase your OS limits.
    # 0 - unlimited.
    max_open_connections = 3
    # Instrumentation namespace
    namespace = "cometbft"

  init.sh: |
    # install curl
    apk add curl 1>/dev/null

    # ensure folder structures
    mkdir -p /root-data/config
    mkdir -p /root-data/cosmovisor
    mkdir -p /root-data/cosmovisor/bin
    mkdir -p /root-data/cosmovisor/genesis/bin
    mkdir -p /root-data/cosmovisor/genesis/upgrades
    mkdir -p /root-data/sidecar/bin

    # fetch release binary
    curl -Ls {{ .Values.zenrock.releases_url }}/v{{ .Values.zenrock.genesis_version }}/zenrockd \
      -o /root-data/cosmovisor/genesis/bin/zenrockd
    chmod +x /root-data/cosmovisor/genesis/bin/zenrockd

    # start from snapshot
    {{- if .Values.zenrock.snapshot.enabled }}
    if ! [ -d "/root-data/data/application.db" ]; then
      /root-data/cosmovisor/genesis/bin/zenrockd init {{ .Values.zenrock.config.moniker }} \
        --home /root-data --download-snapshot {{ .Values.zenrock.snapshot.url }} \
        --chain-id {{ .Values.zenrock.chain_id }}
    fi
    {{- end }}

    # generate node keys
    {{- if not .Values.zenrock.nodeKeyFromSecret }}
    if ! [ -f "/root-data/config/priv_validator_key.json" ]; then
      echo "Generating new node keys"
      /root-data/cosmovisor/genesis/bin/zenrockd init tmp --home /tmp
      cp /tmp/config/node_key.json /root-data/config/node_key.json
      cp /tmp/config/priv_validator_key.json /root-data/config/priv_validator_key.json
    fi
    {{- end }}

    # fetch genesis
    if ! [ -f "/root-data/config/genesis.json" ]; then
    {{- if not .Values.zenrock.genesis_s3.enabled }}
      echo "Fetching genesis from RPC node {{ .Values.zenrock.genesis_url }}"
      # install jq
      apk add jq 1>/dev/null
      curl {{ .Values.zenrock.genesis_url }} | jq .result.genesis > /root-data/config/genesis.json
    {{- else }}
      echo "Fetching genesis from S3 bucket {{ .Values.zenrock.genesis_s3.bucket_name }}"
      # install awscli
      apk add aws-cli 1>/dev/null
      aws s3 cp s3://{{ .Values.zenrock.genesis_s3.bucket_name }}/genesis.json /root-data/config/genesis.json
    {{- end }}
    fi

    # Make sure the validator_state file exists
    if ! [ -f "/root-data/data/priv_validator_state.json" ]; then
      mkdir -p /root-data/data
      cp /tmp/priv_validator_state.json /root-data/data/
    fi

    # Fetch cosmovisor if it does not exists
    if ! [ -f "/root-data/cosmovisor/bin/{{ .Values.cosmovisor.version }}" ]; then
      cd /root-data/cosmovisor/bin/
      rm -rf *
      wget -qO- {{ .Values.cosmovisor.releases_url }}/cosmovisor%2F{{ .Values.cosmovisor.version }}/cosmovisor-{{ .Values.cosmovisor.version }}-linux-amd64.tar.gz | tar zxvf -
      touch {{ .Values.cosmovisor.version }}
    fi

    # Fetch sidecar if it does not exists
    if ! [ -f "/root-data/sidecar/bin/{{ .Values.sidecar.version }}" ]; then
      cd /root-data/sidecar/bin/
      rm -rf *
      curl -Ls {{ .Values.sidecar.releases_url }}/v{{ .Values.sidecar.version }}/validator_sidecar -o validator_sidecar
      chmod +x validator_sidecar
      touch {{ .Values.sidecar.version }}
    fi
    echo "Initialization completed"
